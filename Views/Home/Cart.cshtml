@{
    ViewData["Title"] = "Shopping Cart";
}

<div class="container mt-4">
    <h2 class="text-center mb-4">🛒 Your Shopping Cart</h2>

    <div class="card shadow p-4">
        <h4 class="fw-bold mb-3">Cart Items</h4>

        <table class="table">
            <thead class="table-dark">
                <tr>
                    <th>Product</th>
                    <th>Price</th>
                    <th>Quantity</th>
                    <th>Total</th>
                    <th>Action</th>
                </tr>
            </thead>
            <tbody id="cartItems"></tbody>
        </table>

        <h4 id="cartTotal" class="fw-bold text-end">Total: $0.00</h4>
    </div>

    <!-- Buttons -->
    <div class="d-flex justify-content-between mt-4">
        <a asp-controller="Home" asp-action="Index" class="btn btn-secondary">Continue Shopping</a>
        <button class="btn btn-success" id="checkoutBtn">Proceed to Checkout</button>
    </div>
</div>

<script>
    $(document).ready(function () {
        function updateCartDisplay() {
            console.log("Fetching cart items...");
            var cart = JSON.parse(localStorage.getItem("cart")) || [];
            console.log("Cart Data:", cart);

            var total = 0;
            $("#cartItems").empty();

            if (cart.length === 0) {
                $("#cartItems").append(`<tr><td colspan="5" class="text-center text-muted">🛑 Your cart is empty</td></tr>`);
            } else {
                cart.forEach((item, index) => {
                    var itemTotal = item.price * item.quantity;
                    total += itemTotal;

                    $("#cartItems").append(`
                        <tr>
                            <td>${item.name}</td>
                            <td>$${parseFloat(item.price).toFixed(2)}</td>
                            <td>
                                <input type="number" class="form-control quantityInput" data-index="${index}" value="${item.quantity}" min="1">
                            </td>
                            <td>$${itemTotal.toFixed(2)}</td>
                            <td>
                                <button class="btn btn-danger btn-sm removeBtn" data-index="${index}">🗑️ Remove</button>
                            </td>
                        </tr>
                    `);
                });
            }

            $("#cartTotal").text(`Total: $${total.toFixed(2)}`);
        }

        // Ensure cart data is stored correctly
        function saveCart(cart) {
            localStorage.setItem("cart", JSON.stringify(cart));
            console.log("Cart Updated:", cart);
        }

        // Update quantity
        $(document).on("change", ".quantityInput", function () {
            var cart = JSON.parse(localStorage.getItem("cart")) || [];
            var index = $(this).data("index");
            var newQuantity = parseInt($(this).val());

            if (newQuantity < 1) newQuantity = 1;

            cart[index].quantity = newQuantity;
            saveCart(cart);
            updateCartDisplay();
        });

        // Remove item from cart
        $(document).on("click", ".removeBtn", function () {
            var cart = JSON.parse(localStorage.getItem("cart")) || [];
            var index = $(this).data("index");

            cart.splice(index, 1);
            saveCart(cart);
            updateCartDisplay();
        });

        // Checkout functionality with authentication check
        $("#checkoutBtn").click(function () {
            var isAuthenticated = '@User.Identity.IsAuthenticated' === 'True';
            var cart = JSON.parse(localStorage.getItem("cart")) || [];

            if (cart.length === 0) {
                alert("⚠️ Your cart is empty. Add items before proceeding to checkout.");
                return;
            }

            if (!isAuthenticated) {
                alert("🔒 You need to log in to proceed to checkout.");
                window.location.href = "/Account/Login";
                return;
            }

            window.location.href = "/Checkout";
        });

        // Initial cart display
        updateCartDisplay();
    });
</script>
